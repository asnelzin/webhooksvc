on:
  push:
    branches:
    tags:
    paths:
      - ".github/workflows/build.yml"
      - "**.go"
      - ".dockerignore"
      - "Dockerfile"
      - "!**.md"

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v2
      - name: install go
        uses: actions/setup-go@v4
        with:
          go-version: "1.20"
          cache: false

      - name: test and build
        run: |
          go test -race -covermode=atomic -coverprofile=$GITHUB_WORKSPACE/profile.cov ./...
          go build -race ./...

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.53.3

  image:
    name: Build Docker images
    needs: test
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2
      - name: available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: build and deploy master image to ghcr.io
        if: ${{ github.ref == 'refs/heads/master' }}
        env:
          GITHUB_PACKAGE_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          USERNAME: ${{ github.actor }}
          GITHUB_SHA: ${{ github.sha }}
          GITHUB_REF: ${{ github.ref }}
        run: |
          branch="$(echo ${GITHUB_REF} | cut -d'/' -f3)"
          echo "GITHUB_REF=${GITHUB_REF}, GITHUB_SHA=${GITHUB_SHA}, GIT_BRANCH=${branch}"
          echo ${GITHUB_PACKAGE_TOKEN} | docker login ghcr.io -u ${USERNAME} --password-stdin
          docker buildx build --push \
              --build-arg CI=github --build-arg GITHUB_SHA=${GITHUB_SHA} --build-arg GIT_BRANCH=${ref} \
              --build-arg GITHUB_REF=${GITHUB_REF} \
              --platform linux/amd64,linux/arm/v7,linux/arm64 \
              -t ghcr.io/asnelzin/webhooksvc:${branch} -t ghcr.io/asnelzin/webhooksvc:latest .
